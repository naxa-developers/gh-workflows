name: Deploy Docker Image
description: Pulls and Deploys a Docker image to a server using SSH and Docker Compose.

inputs:
  SSH_PRIVATE_KEY:
    required: true
    description: "The SSH private key to connect to the deployment server."
  AWS_ACCESS_KEY_ID:
    required: true
    description: "AWS access key for configuring AWS credentials."
  AWS_SECRET_ACCESS_KEY:
    required: true
    description: "AWS secret key for configuring AWS credentials."
  AWS_REGION:
    required: true
    description: "AWS region for configuring AWS credentials."
  ECR_REGISTRY:
    required: true
    description: "Amazon ECR registry URL."
  ECR_REPOSITORY:
    required: true
    description: "Amazon ECR repository name."
  DEPLOYMENT_SERVER_IP:
    required: true
    description: "The IP address of the deployment server."
  DEPLOYMENT_SERVER_USERNAME:
    required: true
    default: 'ubuntu'
    description: "The SSH username for the deployment server."
  PHASE_SERVICE_TOKEN:
    required: true
    description: "Phase Token for Service Account"
  PHASE_APP_ID:
    required: true
    description: "The Unique Identifier for the Projects in Phase"
  BRANCH_NAME:
    required: true
    description: "Branch executing workflow"
  PHASE_HOST:
    required: false
    default: 'https://phase.naxa.com.np'
    description: "Only required for self-hosted one"
  PHASE_ENV:
    required: true
    description: "Environment name to fetch secrets for (e.g., develop, staging, master)."

runs:
  using: 'composite'
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Configure SSH Key
      shell: bash
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/id_rsa
        chmod 666 ~/.ssh/id_rsa
        echo "${{ inputs.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa
        ssh-keyscan ${{ inputs.DEPLOYMENT_SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Generate env from Phase
      uses: naxa-developers/gh-workflows/.github/actions/phase_env_fetch@master
      with:
        phase_service_token: ${{ inputs.PHASE_SERVICE_TOKEN }}
        phase_app_id: ${{ inputs.PHASE_APP_ID }}
        phase_env: ${{ inputs.PHASE_ENV }}
        phase_host: ${{ inputs.PHASE_HOST }}

    - name: Copy Docker Compose File
      shell: bash
      run: |
        cp ./docker/server/docker-compose.${{ inputs.BRANCH_NAME }}.yml docker-compose.yml

    - name: Pull and Deploy Docker Image to Server
      shell: bash
      run: |
        docker compose --file docker-compose.yml pull
        docker compose --file docker-compose.yml up --detach
      env:
        DOCKER_HOST: ssh://${{ inputs.DEPLOYMENT_SERVER_USERNAME }}@${{ inputs.DEPLOYMENT_SERVER_IP }}
